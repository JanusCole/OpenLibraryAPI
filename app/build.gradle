import org.jetbrains.kotlin.gradle.dsl.KotlinCompile

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id "org.jlleitschuh.gradle.ktlint" version "11.0.0"
    id 'jacoco'
}

android {
    namespace 'com.januscole.openlibrary'
    compileSdk 33

    defaultConfig {
        applicationId "com.januscole.openlibrary"
        minSdk 22
        targetSdk 33
        versionCode 1
        versionName "1.0"
        resourceConfigurations = ["en", "fr"]

        testInstrumentationRunner "com.januscole.openlibrary.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        }
    }
}

tasks.getByPath("preBuild").dependsOn("ktlintFormat")

ktlint {
    android = true
    ignoreFailures = false
    disabledRules = ["no-wildcard-imports", "max-line-length"]
    reporters {
        reporter "plain"
        reporter "checkstyle"
        reporter "sarif"
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$runtime_ktx_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation "androidx.compose.material:material:$compose_material_version"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    androidTestImplementation project(path: ':app')
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
    implementation "androidx.navigation:navigation-compose:$navigation_compose_version"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_android_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_android_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_navigation_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:converter-gson:$gson_converter_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    // Coil image processing
    implementation "io.coil-kt:coil-compose:$coil_version"

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"

    // For tests.
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_android_version"
    // ...with Kotlin.
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_android_version"
    // ...with Java.
    testAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_android_version"


    // For instrumented tests.
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_android_version"
    // ...with Kotlin.
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_android_version"
    // ...with Java.
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_android_version"

    // Testing
    testImplementation "junit:junit:$junit_version"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_tests_version"

    testImplementation "app.cash.turbine:turbine:$turbine_version"

    // Mockito
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"

    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}

jacoco {
    toolVersion = "0.8.7"
}

configurations.all{
    resolutionStrategy {
        eachDependency { details ->
            if ('org.jacoco' == details.requested.group) {
                details.useVersion "0.8.7"
            }
        }
    }
}